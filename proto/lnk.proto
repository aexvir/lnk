syntax = "proto3";
package lnk;

import "gnostic/openapi/v3/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "lnk/proto";

option (gnostic.openapi.v3.document) = {
  info: {
    title: "Lnk API";
    version: "0.1.0";
    description: "Lnk is a basic url shortener that can be managed via rest api calls";
    contact: {
      name: "Alex Viscreanu";
      url: "https://github.com/aexvir/lnk";
    }
  }
};

service Links {
  // Get a list of all the shortened links as well as metadata about their usage.
  rpc ListLinks(google.protobuf.Empty) returns (LinkList) {
    option (google.api.http) = {
      get: "/api/links"
    };
    option (gnostic.openapi.v3.operation) = {
      summary: "List all links"
    };
  }
  // Create a new shortened link that when visited, it will redirect to the target url.
  rpc CreateLink(CreateLinkReq) returns (LinkId) {
    option (google.api.http) = {
      post: "/api/links"
      body: "*"
    };
    option (gnostic.openapi.v3.operation) = {
      summary: "Create shortened link"
    };
  }
  // Obtain details for a shortened link, like how many times it was visited and its daily
  // visits breakdown.
  rpc GetLink(LinkId) returns (LinkDetails) {
    option (google.api.http) = {
      get: "/api/links/{slug}"
    };
    option (gnostic.openapi.v3.operation) = {
      summary: "Get details of a link"
    };
  }
  // Delete the specified shortened link as well including its metadata.
  rpc DeleteLink(LinkId) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/links/{slug}"
    };
    option (gnostic.openapi.v3.operation) = {
      summary: "Delete shortened link"
    };
  }
}

message LinkDetails {
  // Identifier of a redirecting link. Used as the url path for redirects.
  string slug = 1 [(gnostic.openapi.v3.property) = {
    example: {
      yaml: "'b8f8ea'"
    }
  }];
  // Target url where the link is redirecting to.
  string target = 2 [(gnostic.openapi.v3.property) = {
    example: {
      yaml: "'http://google.com'"
    }
  }];
  // Total amount of hits for this link.
  uint64 hits = 3 [(gnostic.openapi.v3.property) = {
    example: {
      yaml: "42"
    }
  }];
  // Daily breakdown of the hits.
  repeated DailyHits stats = 4;
}

message CreateLinkReq {
  // Target url where to redirect when visiting the shortened link.
  string target = 1 [(gnostic.openapi.v3.property) = {
    example: {
      yaml: "'http://google.com'"
    }
  }];;
  // Custom slug to use on the shortened link instead of generating a random one.
  optional string slug = 2 [(gnostic.openapi.v3.property) = {
    example: {
      yaml: "'search'"
    }
  }];;
}

message LinkId {
  // Identifier of a redirecting link. Used as the url path for redirects.
  string slug = 1 [(gnostic.openapi.v3.property) = {
    example: {
      yaml: "'b8f8ea'";
    }
  }];
}

message DailyHits {
  // ISO8601 formatted date for the day which hits are returned.
  string date = 1 [(gnostic.openapi.v3.property) = {
    example: {
      yaml: "'2022-06-11'"
    }
  }];
  // Amount of hits for the link on the specified date.
  uint64 hits = 2 [(gnostic.openapi.v3.property) = {
    example: {
      yaml: "42"
    }
  }];
}

message LinkList {
  repeated LinkDetails links = 1;
}
